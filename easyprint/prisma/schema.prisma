generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  name          String?
  role          Role     @default(USER)
  photoURL      String?
  emailVerified Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  password      String
  orders        Order[]

  @@map("users")
}

model Order {
  id            String       @id @default(uuid())
  userId        String
  orderNumber   String       @unique @default(cuid())
  customerName  String
  customerEmail String
  customerPhone String?
  serviceType   ServiceType
  paperSize     PaperSize
  colorType     ColorType
  copies        Int          @default(1)
  pages         Int          @default(1)
  bindingType   BindingType?
  fileUrl       String?
  fileName      String?
  pricePerPage  Float
  totalPrice    Float
  status        OrderStatus  @default(PENDING)
  notes         String?
  adminNotes    String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  completedAt   DateTime?
  user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([status])
  @@index([createdAt])
  @@map("orders")
}

enum Role {
  USER
  STAFF
  ADMIN
}

enum ServiceType {
  DOCUMENT_PRINTING
  RUSH_ID
  BINDING
  LAMINATION
}

enum PaperSize {
  A4
  A3
  LETTER
  LEGAL
  CUSTOM
}

enum ColorType {
  BLACK_AND_WHITE
  COLOR
  MIX
}

enum BindingType {
  NONE
  WIREBIND
  SOFT
  HARD
}

enum OrderStatus {
  PENDING
  PROCESSING
  READY
  ON_DELIVERY
  COMPLETED
  CANCELLED
}
